// <auto-generated />
using System;
using DespensaBarrialFinal.BD;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DepensaBarrialFinal.BD.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220929201319_Total")]
    partial class Total
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DespensaBarrialFinal.BD.Entidades.Administrador", b =>
                {
                    b.Property<int>("IdAdministrador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAdministrador"), 1L, 1);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAdministrador");

                    b.ToTable("Administrador");
                });

            modelBuilder.Entity("DespensaBarrialFinal.BD.Entidades.Categorias", b =>
                {
                    b.Property<int>("IdCategorias")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategorias"), 1L, 1);

                    b.Property<int>("TipoCategoria")
                        .HasColumnType("int");

                    b.HasKey("IdCategorias");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("DespensaBarrialFinal.BD.Entidades.Deposito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("EmpleadoDepositoIdEmpleado")
                        .HasColumnType("int");

                    b.Property<int>("UnidadMinima")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmpleadoDepositoIdEmpleado");

                    b.ToTable("Deposito");
                });

            modelBuilder.Entity("DespensaBarrialFinal.BD.Entidades.Empleado", b =>
                {
                    b.Property<int>("IdEmpleado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEmpleado"), 1L, 1);

                    b.Property<int>("AdministadorId")
                        .HasColumnType("int");

                    b.Property<string>("Domicilio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("EdadEmpleado")
                        .HasColumnType("decimal(20,0)");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreEmpleado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("NumeroTelefono")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("IdEmpleado");

                    b.HasIndex("AdministadorId")
                        .IsUnique();

                    b.ToTable("Empleado");
                });

            modelBuilder.Entity("DespensaBarrialFinal.BD.Entidades.Logs", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Mensaje")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("DespensaBarrialFinal.BD.Entidades.Productos", b =>
                {
                    b.Property<int>("IdProductos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProductos"), 1L, 1);

                    b.Property<int?>("CategoriaIdCategorias")
                        .HasColumnType("int");

                    b.Property<int?>("DepositoCantidadId")
                        .HasColumnType("int");

                    b.Property<string>("DescripcionProducto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstaBorrado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaVencimientoProducto")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreProducto")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("PrecioProducto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TipoCategoriaEnProductos")
                        .HasColumnType("int");

                    b.HasKey("IdProductos");

                    b.HasIndex("CategoriaIdCategorias");

                    b.HasIndex("DepositoCantidadId");

                    b.HasIndex("NombreProducto")
                        .IsUnique()
                        .HasFilter("[NombreProducto] IS NOT NULL");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("DespensaBarrialFinal.BD.Entidades.Proveedores", b =>
                {
                    b.Property<int>("Id_delproveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_delproveedor"), 1L, 1);

                    b.Property<int>("AdministadorId")
                        .HasColumnType("int");

                    b.Property<int?>("AdministradorIdAdministrador")
                        .HasColumnType("int");

                    b.Property<string>("CorreoElectronico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumeroTelefono")
                        .HasColumnType("int");

                    b.HasKey("Id_delproveedor");

                    b.HasIndex("AdministradorIdAdministrador");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("DespensaBarrialFinal.BD.Entidades.ProveedorProducto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductosIdProductos")
                        .HasColumnType("int");

                    b.Property<int>("ProveedorId")
                        .HasColumnType("int");

                    b.Property<int?>("ProveedoresId_delproveedor")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("ProductosIdProductos");

                    b.HasIndex("ProveedoresId_delproveedor");

                    b.ToTable("ProveedorProducto");
                });

            modelBuilder.Entity("DespensaBarrialFinal.BD.Entidades.Deposito", b =>
                {
                    b.HasOne("DespensaBarrialFinal.BD.Entidades.Empleado", "EmpleadoDeposito")
                        .WithMany()
                        .HasForeignKey("EmpleadoDepositoIdEmpleado");

                    b.Navigation("EmpleadoDeposito");
                });

            modelBuilder.Entity("DespensaBarrialFinal.BD.Entidades.Empleado", b =>
                {
                    b.HasOne("DespensaBarrialFinal.BD.Entidades.Administrador", "Administrador")
                        .WithOne("UnEmpleado")
                        .HasForeignKey("DespensaBarrialFinal.BD.Entidades.Empleado", "AdministadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Administrador");
                });

            modelBuilder.Entity("DespensaBarrialFinal.BD.Entidades.Productos", b =>
                {
                    b.HasOne("DespensaBarrialFinal.BD.Entidades.Categorias", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaIdCategorias");

                    b.HasOne("DespensaBarrialFinal.BD.Entidades.Deposito", "DepositoCantidad")
                        .WithMany("ProductosEnDeposito")
                        .HasForeignKey("DepositoCantidadId");

                    b.Navigation("Categoria");

                    b.Navigation("DepositoCantidad");
                });

            modelBuilder.Entity("DespensaBarrialFinal.BD.Entidades.Proveedores", b =>
                {
                    b.HasOne("DespensaBarrialFinal.BD.Entidades.Administrador", "Administrador")
                        .WithMany("ProveedoresAdministrador")
                        .HasForeignKey("AdministradorIdAdministrador");

                    b.Navigation("Administrador");
                });

            modelBuilder.Entity("DespensaBarrialFinal.BD.Entidades.ProveedorProducto", b =>
                {
                    b.HasOne("DespensaBarrialFinal.BD.Entidades.Productos", "Productos")
                        .WithMany("ProveedorProductos")
                        .HasForeignKey("ProductosIdProductos");

                    b.HasOne("DespensaBarrialFinal.BD.Entidades.Proveedores", "Proveedores")
                        .WithMany("ProveedorProductos")
                        .HasForeignKey("ProveedoresId_delproveedor");

                    b.Navigation("Productos");

                    b.Navigation("Proveedores");
                });

            modelBuilder.Entity("DespensaBarrialFinal.BD.Entidades.Administrador", b =>
                {
                    b.Navigation("ProveedoresAdministrador");

                    b.Navigation("UnEmpleado");
                });

            modelBuilder.Entity("DespensaBarrialFinal.BD.Entidades.Deposito", b =>
                {
                    b.Navigation("ProductosEnDeposito");
                });

            modelBuilder.Entity("DespensaBarrialFinal.BD.Entidades.Productos", b =>
                {
                    b.Navigation("ProveedorProductos");
                });

            modelBuilder.Entity("DespensaBarrialFinal.BD.Entidades.Proveedores", b =>
                {
                    b.Navigation("ProveedorProductos");
                });
#pragma warning restore 612, 618
        }
    }
}
